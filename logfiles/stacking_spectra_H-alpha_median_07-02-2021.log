~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This program will stack individual spectra that meet certain criteria
and have entries in both the flux catalog and photometric catalog.
THIS CODE IS IN DEVELOPMENT.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Review of options called and arguments given to this script:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Options:
-> SLC Table:  None
-> Dust Correct:  False
-> Multiple Images:  False
-> Include Stacks:  False

Arguments:
-> Flux Table:  newTable.fits
-> Normalize By:  H-alpha
-> Stacking Method:  median
-> Stacking Sample Table:  test.fits


The path and current working directory are:  /Users/chrismac/python/stack_spectra
The path with the mask sub-directories is:  /Users/chrismac/python/stack_spectra/LRIS/

The following masks will have any appropriate associated spectra stacked:

M0717_1
M0717_2_new
M0717_3
M1149_1
M1149_2
M1149_3
a1689_1
a1689_3
a1689_4
a1689_6
a1689_z1_1

If you are including in this stacking procedure previously made stacks for multiply-imaged galaxies,
they should be in, and will be pulled from, the directory: /Users/chrismac/python/stack_spectra/mult_img_stacks/

Reading in extension 1 of FITS file "newTable.fits" and copying table

Reading in extension 1 of FITS file "test.fits" and copying table

/Users/chrismac/python/stack_spectra/LRIS/M0717_1/error_spectra_corrected/slit_loss_corrected/
Checking to see if 10027_M0717_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1066_M0717_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1306_M0717_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1917_M0717_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2122_M0717_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2183_M0717_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2223_M0717_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 960_M0717_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

/Users/chrismac/python/stack_spectra/LRIS/M0717_2_new/error_spectra_corrected/slit_loss_corrected/
Checking to see if 10012_M0717_2_new.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 10030_M0717_2_new.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1170_M0717_2_new.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1627_M0717_2_new.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1756_M0717_2_new.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 692_M0717_2_new.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 830_M0717_2_new.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

/Users/chrismac/python/stack_spectra/LRIS/M0717_3/error_spectra_corrected/slit_loss_corrected/
Checking to see if 10004_M0717_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1034_M0717_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1689_M0717_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2185_M0717_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2698_M0717_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2889_M0717_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 454_M0717_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 488_M0717_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 744_M0717_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

/Users/chrismac/python/stack_spectra/LRIS/M1149_1/error_spectra_corrected/slit_loss_corrected/
/Users/chrismac/python/stack_spectra/LRIS/M1149_2/error_spectra_corrected/slit_loss_corrected/
Checking to see if 1363_M1149_2.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1545_M1149_2.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1649_M1149_2.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2520_M1149_2.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2533_M1149_2.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

/Users/chrismac/python/stack_spectra/LRIS/M1149_3/error_spectra_corrected/slit_loss_corrected/
Checking to see if 2043_M1149_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2228_M1149_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2394_M1149_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2620_M1149_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 611_M1149_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 647_M1149_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if cross_w_M1149_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

/Users/chrismac/python/stack_spectra/LRIS/a1689_1/error_spectra_corrected/slit_loss_corrected/
Checking to see if 10013_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 10038_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1098_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1197_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1212_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1285_A1689_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1337_A1689_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1451_A1689_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1587_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1614_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1650_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1721_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1856_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2067_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2112_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 213_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2320_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2331_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2395_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 257_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
True

Checking to see if 2614_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 2761_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 280_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
True

Checking to see if 2821_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 345_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
True

Checking to see if 363_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 370_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 40000_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 40005_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 40007_A1689_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 499_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 539_A1689_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 729_A1689_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 758_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 760_A1689_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 786_weight_mean.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 830_weight_mean_A1689.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 873_382_A1689_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

/Users/chrismac/python/stack_spectra/LRIS/a1689_3/error_spectra_corrected/slit_loss_corrected/
Checking to see if 1014_A1689_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1069_A1689_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1349_A1689_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1372_A1689_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1470_A1689_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1471_A1689_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1500_A1689_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 30003_A1689_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 40011_A1689_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 419_A1689_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 523_A1689_3.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

/Users/chrismac/python/stack_spectra/LRIS/a1689_4/error_spectra_corrected/slit_loss_corrected/
Checking to see if 1127_A1689_4.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1292_A1689_4.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 537_A1689_4.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 540_A1689_4.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 632_A1689_4.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 920_A1689_4.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 946_A1689_4.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

/Users/chrismac/python/stack_spectra/LRIS/a1689_6/error_spectra_corrected/slit_loss_corrected/
Checking to see if 1000_A1689_6.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1059_A1689_6.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1117_A1689_6.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1137_A1689_6.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1467_A1689_6.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1829_A1689_6.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 680_A1689_6.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 804_A1689_6.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

/Users/chrismac/python/stack_spectra/LRIS/a1689_z1_1/error_spectra_corrected/slit_loss_corrected/
Checking to see if 1037_A1689_z1_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1488_A1689_z1_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1637_A1689_z1_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 1751_A1689_z1_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 414_A1689_z1_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 470_A1689_z1_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 664_A1689_z1_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

Checking to see if 991_A1689_z1_1.fits corresponds to a galaxy to be stacked: 
<class 'str'>
False

                                               fpath     mask   id     filt
0  /Users/chrismac/python/stack_spectra/LRIS/a168...  a1689_1  257  rest_UV
1  /Users/chrismac/python/stack_spectra/LRIS/a168...  a1689_1  280  rest_UV
2  /Users/chrismac/python/stack_spectra/LRIS/a168...  a1689_1  345  rest_UV



Number of galaxies that should be stacked:  3
Number of galaxies with spectral data found:  3

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Created directory: /Users/chrismac/python/stack_spectra/intermed_stacking_output_H-alpha_median/tables and subdirectory /resampled_spectra therein

--> Preparing spectrum in file 257_weight_mean.fits for resampling...

Mask:  a1689_1
ID:  257
Filter:  rest_UV

Emission line with which the spectrum will be normalized:  H-alpha
9
A1689_1 257
Measured emission-line flux (NOT dust-corrected or de-magnified):  8.70678e-17
-> Converting from flux to luminosity...
Luminosities and fluxes here are bolometric

Object lies at z = 1.70355133038
()
Cosmological parameters (z=0) to be used in luminosity distance calculations:
H = 70.0 km / (Mpc s)
O(matter) = 0.3
O(darkenergy) = 0.699914749669108
O(baryon) = 0.05
T(CMB) = 2.725 K
()
The luminosity distance to the galaxy (in Mpc): 12760.19800940986
The luminosity distance to the galaxy (in cm): 3.9377971057038823e+28
()
Conversion complete.
()
-> Shifting from observed wavelengths to rest wavelengths...
Object lies at z = 1.70355133038
()
Rest-wavelengths calculated.
()
-> Converting from flux to luminosity...
Luminosities and fluxes here are densities per unit WAVELENGTH

Object lies at z = 1.70355133038
()
Cosmological parameters (z=0) to be used in luminosity distance calculations:
H = 70.0 km / (Mpc s)
O(matter) = 0.3
O(darkenergy) = 0.699914749669108
O(baryon) = 0.05
T(CMB) = 2.725 K
()
The luminosity distance to the galaxy (in Mpc): 12760.19800940986
The luminosity distance to the galaxy (in cm): 3.9377971057038823e+28
()
Conversion complete.
()
Calculated emission-line luminosity (NOT dust-corrected or de-magnified): 1.69658e+42
-> Normalizing the spectra's intrinsic luminosities by the intrinsic luminosity of the emission line H-alpha ...

Spectrum normalized and error spectrum propogated

-> Writing spectrum parameters to PANDAS DataFrame of sample parameters to be considered later...
-> Plotting original spectrum shifted to rest-frame, rest-frame luminosity spectrum, and rest-frame normalized luminosity spectrum...
-> Saving spectrum to a file to be accessed later...

A1689_1.rest_UV.257.rest-frame.lum.norm-lum.not-resampled.txt written!



--> Preparing spectrum in file 280_weight_mean.fits for resampling...

Mask:  a1689_1
ID:  280
Filter:  rest_UV

Emission line with which the spectrum will be normalized:  H-alpha
Measured emission-line flux (NOT dust-corrected or de-magnified):  8.70678e-17
-> Converting from flux to luminosity...
Luminosities and fluxes here are bolometric

Object lies at z = 1.70355133038
()
Cosmological parameters (z=0) to be used in luminosity distance calculations:
H = 70.0 km / (Mpc s)
O(matter) = 0.3
O(darkenergy) = 0.699914749669108
O(baryon) = 0.05
T(CMB) = 2.725 K
()
The luminosity distance to the galaxy (in Mpc): 12760.19800940986
The luminosity distance to the galaxy (in cm): 3.9377971057038823e+28
()
Conversion complete.
()
-> Shifting from observed wavelengths to rest wavelengths...
Object lies at z = 1.70355133038
()
Rest-wavelengths calculated.
()
-> Converting from flux to luminosity...
Luminosities and fluxes here are densities per unit WAVELENGTH

Object lies at z = 1.70355133038
()
Cosmological parameters (z=0) to be used in luminosity distance calculations:
H = 70.0 km / (Mpc s)
O(matter) = 0.3
O(darkenergy) = 0.699914749669108
O(baryon) = 0.05
T(CMB) = 2.725 K
()
The luminosity distance to the galaxy (in Mpc): 12760.19800940986
The luminosity distance to the galaxy (in cm): 3.9377971057038823e+28
()
Conversion complete.
()
Calculated emission-line luminosity (NOT dust-corrected or de-magnified): 1.69658e+42
-> Normalizing the spectra's intrinsic luminosities by the intrinsic luminosity of the emission line H-alpha ...

Spectrum normalized and error spectrum propogated

-> Writing spectrum parameters to PANDAS DataFrame of sample parameters to be considered later...
-> Plotting original spectrum shifted to rest-frame, rest-frame luminosity spectrum, and rest-frame normalized luminosity spectrum...
-> Saving spectrum to a file to be accessed later...

A1689_1.rest_UV.280.rest-frame.lum.norm-lum.not-resampled.txt written!



--> Preparing spectrum in file 345_weight_mean.fits for resampling...

Mask:  a1689_1
ID:  345
Filter:  rest_UV

Emission line with which the spectrum will be normalized:  H-alpha
Measured emission-line flux (NOT dust-corrected or de-magnified):  8.70678e-17
-> Converting from flux to luminosity...
Luminosities and fluxes here are bolometric

Object lies at z = 1.70355133038
()
Cosmological parameters (z=0) to be used in luminosity distance calculations:
H = 70.0 km / (Mpc s)
O(matter) = 0.3
O(darkenergy) = 0.699914749669108
O(baryon) = 0.05
T(CMB) = 2.725 K
()
The luminosity distance to the galaxy (in Mpc): 12760.19800940986
The luminosity distance to the galaxy (in cm): 3.9377971057038823e+28
()
Conversion complete.
()
-> Shifting from observed wavelengths to rest wavelengths...
Object lies at z = 1.70355133038
()
Rest-wavelengths calculated.
()
-> Converting from flux to luminosity...
Luminosities and fluxes here are densities per unit WAVELENGTH

Object lies at z = 1.70355133038
()
Cosmological parameters (z=0) to be used in luminosity distance calculations:
H = 70.0 km / (Mpc s)
O(matter) = 0.3
O(darkenergy) = 0.699914749669108
O(baryon) = 0.05
T(CMB) = 2.725 K
()
The luminosity distance to the galaxy (in Mpc): 12760.19800940986
The luminosity distance to the galaxy (in cm): 3.9377971057038823e+28
()
Conversion complete.
()
Calculated emission-line luminosity (NOT dust-corrected or de-magnified): 1.69658e+42
-> Normalizing the spectra's intrinsic luminosities by the intrinsic luminosity of the emission line H-alpha ...

Spectrum normalized and error spectrum propogated

-> Writing spectrum parameters to PANDAS DataFrame of sample parameters to be considered later...
-> Plotting original spectrum shifted to rest-frame, rest-frame luminosity spectrum, and rest-frame normalized luminosity spectrum...
-> Saving spectrum to a file to be accessed later...

A1689_1.rest_UV.345.rest-frame.lum.norm-lum.not-resampled.txt written!



restframe_lum_normlum_spectra_H-alpha.pdf written!



Sample parameters of interest:
    ID     Mask   Filter  ... H-alpha_Flux  H-alpha_Lum H-alpha_Lum_Err
0  257  A1689_1  rest_UV  ...  8.70678e-17  1.69658e+42     2.54201e+40
1  280  A1689_1  rest_UV  ...  8.70678e-17  1.69658e+42     2.54201e+40
2  345  A1689_1  rest_UV  ...  8.70678e-17  1.69658e+42     2.54201e+40

[3 rows x 10 columns]


rest_UV
At the end of the stacking process, the median luminosity of H-alpha will be multiplied into the stack
This value will be written to the header of the tabulated stacked spectrum multiplied by this line

sample_parameters_H-alpha_median.txt written.

The median redshift of the sample is: 1.70355133038

From the LRIS-band observed-frame dispersion of 2.18 A/pixel that will be used for the LRIS stack, 
the rest-frame dispersion will be: 0.8063

resampled_wavelength_parameters.txt - which includes the new minimum and new maximum wavelengths
 and the rest-frame dispersions - written


problem
['A1689_1.rest_UV.257.rest-frame.lum.norm-lum.not-resampled.txt', 'A1689_1.rest_UV.280.rest-frame.lum.norm-lum.not-resampled.txt', 'A1689_1.rest_UV.345.rest-frame.lum.norm-lum.not-resampled.txt']
--> Considering A1689_1.rest_UV.257.rest-frame.lum.norm-lum.not-resampled.txt for resampling:

A1689_1.rest_UV.257.rest-frame.lum.norm-lum.not-resampled.txt
<class 'str'>
Mask: A1689_1
Filter: rest_UV
ID: 257

-> Resampling the spectra according to the aforementioned wavelength range and dispersion for the stack...

-> Trimming the ends of the spectrum that fall outside the new wavelength range...
-> Resampling the spectra...

Spectres: new_wavs contains values outside the range in spec_wavs, new_fluxes and new_errs will be filled with the value set in the 'fill' keyword argument. 


-> New wavelength, luminosity, and luminosity error (if resampled) arrays will be returned as a 2D array with columns in this respective order.
[[1.11000000e+03 0.00000000e+00 0.00000000e+00]
 [1.11080630e+03 4.96706243e+16 2.11033449e+17]
 [1.11161260e+03 8.39752348e+16 1.73087399e+17]
 ...
 [2.21382470e+03            nan            nan]
 [2.21463100e+03            nan            nan]
 [2.21543730e+03 0.00000000e+00 0.00000000e+00]]

A1689_1.rest_UV.257.resampled_noDC.txt written!



--> Considering A1689_1.rest_UV.280.rest-frame.lum.norm-lum.not-resampled.txt for resampling:

A1689_1.rest_UV.280.rest-frame.lum.norm-lum.not-resampled.txt
<class 'str'>
Mask: A1689_1
Filter: rest_UV
ID: 280

-> Resampling the spectra according to the aforementioned wavelength range and dispersion for the stack...

-> Trimming the ends of the spectrum that fall outside the new wavelength range...
-> Resampling the spectra...

Spectres: new_wavs contains values outside the range in spec_wavs, new_fluxes and new_errs will be filled with the value set in the 'fill' keyword argument. 


-> New wavelength, luminosity, and luminosity error (if resampled) arrays will be returned as a 2D array with columns in this respective order.
[[ 1.11000000e+03  0.00000000e+00  0.00000000e+00]
 [ 1.11080630e+03 -2.80171840e+17  1.34713334e+17]
 [ 1.11161260e+03 -5.05056195e+16  1.28123414e+17]
 ...
 [ 2.21382470e+03             nan             nan]
 [ 2.21463100e+03             nan             nan]
 [ 2.21543730e+03  0.00000000e+00  0.00000000e+00]]

A1689_1.rest_UV.280.resampled_noDC.txt written!



--> Considering A1689_1.rest_UV.345.rest-frame.lum.norm-lum.not-resampled.txt for resampling:

A1689_1.rest_UV.345.rest-frame.lum.norm-lum.not-resampled.txt
<class 'str'>
Mask: A1689_1
Filter: rest_UV
ID: 345

-> Resampling the spectra according to the aforementioned wavelength range and dispersion for the stack...

-> Trimming the ends of the spectrum that fall outside the new wavelength range...
-> Resampling the spectra...

Spectres: new_wavs contains values outside the range in spec_wavs, new_fluxes and new_errs will be filled with the value set in the 'fill' keyword argument. 


-> New wavelength, luminosity, and luminosity error (if resampled) arrays will be returned as a 2D array with columns in this respective order.
[[1.11000000e+03 0.00000000e+00 0.00000000e+00]
 [1.11080630e+03 2.75027019e+17 1.53669510e+17]
 [1.11161260e+03 1.83234995e+17 1.27398776e+17]
 ...
 [2.21382470e+03 7.21938297e+15 9.02721007e+15]
 [2.21463100e+03 3.42793846e+15 8.57116731e+15]
 [2.21543730e+03 0.00000000e+00 0.00000000e+00]]

A1689_1.rest_UV.345.resampled_noDC.txt written!



resampled_normalized_spectra.pdf written!



--> Stacking the spectra and finalizing the stacks...

-> Combining all of the resampled spectra into one stack via a(n) median ...

-> Multiplying the stacked spectrum by the sample's median H-alpha luminosity...
This luminosity is (erg/s): 1.6965799122965404e+42



stacked_spectrum_LRIS-bands_median_H-alpha_noDC.txt written!
stacked_spectrum_LRIS-bands_median_H-alpha_noDC_final_step-stacked.txt written!



stacking_spectra_H-alpha_median_07-02-2021.log - which logs the terminal output - has been written
and stored in: /Users/chrismac/python/stack_spectra/logfiles/

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



