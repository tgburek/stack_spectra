~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This program will stack individual spectra that meet certain criteria
and have entries in both the flux catalog and photometric catalog.
THIS CODE IS IN DEVELOPMENT.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Review of options called and arguments given to this script:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Options:
-> SLC Table:  None
-> Dust Correct:  False
-> Multiple Images:  False
-> Include Stacks:  False
-> Path to parent directory of spectra to stack:  /Users/chrismac/python/stack_spectra/LRIS

Arguments:
-> Flux Table:  High_ha_UV.fits
-> Normalize By:  Lum_Density
---> Luminosity density taken at wavelength 1700 Angstroms
-> Stacking Method:  median
-> Stacking Sample Table:  High_ha_UV.fits


The path and current working directory are:  /Users/chrismac/python/stack_spectra
The path with the mask sub-directories is:  /Users/chrismac/python/stack_spectra/LRIS/

The following masks will have any appropriate associated spectra stacked:

A1689_1
M0717_1
M0717_2_new
M0717_3
M1149_1
M1149_2
M1149_3
a1689_3
a1689_4
a1689_6
a1689_z1_1

If you are including in this stacking procedure previously made stacks for multiply-imaged galaxies,
they should be in, and will be pulled from, the directory: /Users/chrismac/python/stack_spectra/mult_img_stacks/


Reading in extension 1 of FITS file High_ha_UV.fits and copying table
File located at: /Users/chrismac/python/stack_spectra/


Reading in extension 1 of FITS file High_ha_UV.fits and copying table
File located at: /Users/chrismac/python/stack_spectra/

/Users/chrismac/python/stack_spectra/LRIS/A1689_1/error_spectra_corrected/slit_loss_corrected/
Checking to see if 10012_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
10012
<class 'numpy.float64'>
False

Checking to see if 1014_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
1014
<class 'numpy.float64'>
False

Checking to see if 1034_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
1034
<class 'numpy.float64'>
True

Checking to see if 1098_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
1098
<class 'numpy.float64'>
False

Checking to see if 1197_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
1197
<class 'numpy.float64'>
False

Checking to see if 1337_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
1337
<class 'numpy.float64'>
False

Checking to see if 1467_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
1467
<class 'numpy.float64'>
True

Checking to see if 1637_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
1637
<class 'numpy.float64'>
False

Checking to see if 1689_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
1689
<class 'numpy.float64'>
False

Checking to see if 1721_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
1721
<class 'numpy.float64'>
True

Checking to see if 1751_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
1751
<class 'numpy.float64'>
False

Checking to see if 1829_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
1829
<class 'numpy.float64'>
False

Checking to see if 2067_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
2067
<class 'numpy.float64'>
False

Checking to see if 213_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
213
<class 'numpy.float64'>
False

Checking to see if 2223_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
2223
<class 'numpy.float64'>
False

Checking to see if 2331_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
2331
<class 'numpy.float64'>
False

Checking to see if 257_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
257
<class 'numpy.float64'>
True

Checking to see if 2614_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
2614
<class 'numpy.float64'>
False

Checking to see if 2698_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
2698
<class 'numpy.float64'>
False

Checking to see if 280_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
280
<class 'numpy.float64'>
False

Checking to see if 2821_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
2821
<class 'numpy.float64'>
False

Checking to see if 30003_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
30003
<class 'numpy.float64'>
False

Checking to see if 345_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
345
<class 'numpy.float64'>
False

Checking to see if 40011_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
40011
<class 'numpy.float64'>
False

Checking to see if 454_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
454
<class 'numpy.float64'>
False

Checking to see if 470_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
470
<class 'numpy.float64'>
True

Checking to see if 523_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
523
<class 'numpy.float64'>
True

Checking to see if 537_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
537
<class 'numpy.float64'>
False

Checking to see if 539_test.fits corresponds to a galaxy to be stacked: 
<class 'int'>
539
<class 'numpy.float64'>
False

/Users/chrismac/python/stack_spectra/LRIS/M0717_1/error_spectra_corrected/slit_loss_corrected/
/Users/chrismac/python/stack_spectra/LRIS/M0717_2_new/error_spectra_corrected/slit_loss_corrected/
/Users/chrismac/python/stack_spectra/LRIS/M0717_3/error_spectra_corrected/slit_loss_corrected/
/Users/chrismac/python/stack_spectra/LRIS/M1149_1/error_spectra_corrected/slit_loss_corrected/
/Users/chrismac/python/stack_spectra/LRIS/M1149_2/error_spectra_corrected/slit_loss_corrected/
/Users/chrismac/python/stack_spectra/LRIS/M1149_3/error_spectra_corrected/slit_loss_corrected/
/Users/chrismac/python/stack_spectra/LRIS/a1689_3/error_spectra_corrected/slit_loss_corrected/
/Users/chrismac/python/stack_spectra/LRIS/a1689_4/error_spectra_corrected/slit_loss_corrected/
/Users/chrismac/python/stack_spectra/LRIS/a1689_6/error_spectra_corrected/slit_loss_corrected/
/Users/chrismac/python/stack_spectra/LRIS/a1689_z1_1/error_spectra_corrected/slit_loss_corrected/
                                               fpath     mask      id     filt
0  /Users/chrismac/python/stack_spectra/LRIS/A168...  A1689_1  1034.0  rest_UV
1  /Users/chrismac/python/stack_spectra/LRIS/A168...  A1689_1  1467.0  rest_UV
2  /Users/chrismac/python/stack_spectra/LRIS/A168...  A1689_1  1721.0  rest_UV
3  /Users/chrismac/python/stack_spectra/LRIS/A168...  A1689_1   257.0  rest_UV
4  /Users/chrismac/python/stack_spectra/LRIS/A168...  A1689_1   470.0  rest_UV
5  /Users/chrismac/python/stack_spectra/LRIS/A168...  A1689_1   523.0  rest_UV



Number of galaxies that should be stacked:  6
Number of galaxies with spectral data found:  6

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Created directory: /Users/chrismac/python/stack_spectra/intermed_stacking_output_Lum_Density_median/tables and subdirectory /resampled_spectra therein

--> Preparing spectrum in file 1034_test.fits for resampling...

Mask:  A1689_1
ID:  1034.0
Filter:  rest_UV

Spectral feature by which the spectrum will be normalized:  Lum_Density
<class 'numpy.bool_'>
1034
[ 257.  470.  523. 1034. 1467. 1721.]
['A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1']
happened
3
A1689_1 1034.0
Measured continuum luminosity density at 1700 Angstroms:  2.34934e-18

-> Shifting from observed wavelengths to rest wavelengths...
Object lies at z = 2.44
()
Rest-wavelengths calculated.
()
-> Normalizing the spectrum by the continuum luminosity density at 1700 Angstroms ...

Spectrum normalized and error spectrum propogated

-> Writing spectrum parameters to PANDAS DataFrame of sample parameters to be considered later...
1034 A1689_1
-> Plotting original spectrum shifted to rest-frame, rest-frame luminosity spectrum, and rest-frame normalized luminosity spectrum...
-> Saving spectrum to a file to be accessed later...

A1689_1.rest_UV.1034.rest-frame.lum.norm-lum.not-resampled.txt written!



--> Preparing spectrum in file 1467_test.fits for resampling...

Mask:  A1689_1
ID:  1467.0
Filter:  rest_UV

Spectral feature by which the spectrum will be normalized:  Lum_Density
<class 'numpy.bool_'>
1467
[ 257.  470.  523. 1034. 1467. 1721.]
['A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1']
happened
4
A1689_1 1467.0
Measured continuum luminosity density at 1700 Angstroms:  1.44374e-18

-> Shifting from observed wavelengths to rest wavelengths...
Object lies at z = 2.519
()
Rest-wavelengths calculated.
()
-> Normalizing the spectrum by the continuum luminosity density at 1700 Angstroms ...

Spectrum normalized and error spectrum propogated

-> Writing spectrum parameters to PANDAS DataFrame of sample parameters to be considered later...
1467 A1689_1
-> Plotting original spectrum shifted to rest-frame, rest-frame luminosity spectrum, and rest-frame normalized luminosity spectrum...
-> Saving spectrum to a file to be accessed later...

A1689_1.rest_UV.1467.rest-frame.lum.norm-lum.not-resampled.txt written!



--> Preparing spectrum in file 1721_test.fits for resampling...

Mask:  A1689_1
ID:  1721.0
Filter:  rest_UV

Spectral feature by which the spectrum will be normalized:  Lum_Density
<class 'numpy.bool_'>
1721
[ 257.  470.  523. 1034. 1467. 1721.]
['A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1']
happened
5
A1689_1 1721.0
Measured continuum luminosity density at 1700 Angstroms:  1.61875e-18

-> Shifting from observed wavelengths to rest wavelengths...
Object lies at z = 2.092
()
Rest-wavelengths calculated.
()
-> Normalizing the spectrum by the continuum luminosity density at 1700 Angstroms ...

Spectrum normalized and error spectrum propogated

-> Writing spectrum parameters to PANDAS DataFrame of sample parameters to be considered later...
1721 A1689_1
-> Plotting original spectrum shifted to rest-frame, rest-frame luminosity spectrum, and rest-frame normalized luminosity spectrum...
-> Saving spectrum to a file to be accessed later...

A1689_1.rest_UV.1721.rest-frame.lum.norm-lum.not-resampled.txt written!



--> Preparing spectrum in file 257_test.fits for resampling...

Mask:  A1689_1
ID:  257.0
Filter:  rest_UV

Spectral feature by which the spectrum will be normalized:  Lum_Density
<class 'numpy.bool_'>
257
[ 257.  470.  523. 1034. 1467. 1721.]
['A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1']
happened
0
A1689_1 257.0
Measured continuum luminosity density at 1700 Angstroms:  3.07484e-18

-> Shifting from observed wavelengths to rest wavelengths...
Object lies at z = 1.7036
()
Rest-wavelengths calculated.
()
-> Normalizing the spectrum by the continuum luminosity density at 1700 Angstroms ...

Spectrum normalized and error spectrum propogated

-> Writing spectrum parameters to PANDAS DataFrame of sample parameters to be considered later...
257 A1689_1
-> Plotting original spectrum shifted to rest-frame, rest-frame luminosity spectrum, and rest-frame normalized luminosity spectrum...
-> Saving spectrum to a file to be accessed later...

A1689_1.rest_UV.257.rest-frame.lum.norm-lum.not-resampled.txt written!



--> Preparing spectrum in file 470_test.fits for resampling...

Mask:  A1689_1
ID:  470.0
Filter:  rest_UV

Spectral feature by which the spectrum will be normalized:  Lum_Density
<class 'numpy.bool_'>
470
[ 257.  470.  523. 1034. 1467. 1721.]
['A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1']
happened
1
A1689_1 470.0
Measured continuum luminosity density at 1700 Angstroms:  1.94336e-18

-> Shifting from observed wavelengths to rest wavelengths...
Object lies at z = 2.5411
()
Rest-wavelengths calculated.
()
-> Normalizing the spectrum by the continuum luminosity density at 1700 Angstroms ...

Spectrum normalized and error spectrum propogated

-> Writing spectrum parameters to PANDAS DataFrame of sample parameters to be considered later...
470 A1689_1
-> Plotting original spectrum shifted to rest-frame, rest-frame luminosity spectrum, and rest-frame normalized luminosity spectrum...
-> Saving spectrum to a file to be accessed later...

A1689_1.rest_UV.470.rest-frame.lum.norm-lum.not-resampled.txt written!



--> Preparing spectrum in file 523_test.fits for resampling...

Mask:  A1689_1
ID:  523.0
Filter:  rest_UV

Spectral feature by which the spectrum will be normalized:  Lum_Density
<class 'numpy.bool_'>
523
[ 257.  470.  523. 1034. 1467. 1721.]
['A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1' 'A1689_1']
happened
2
A1689_1 523.0
Measured continuum luminosity density at 1700 Angstroms:  8.37696e-18

-> Shifting from observed wavelengths to rest wavelengths...
Object lies at z = 2.542
()
Rest-wavelengths calculated.
()
-> Normalizing the spectrum by the continuum luminosity density at 1700 Angstroms ...

Spectrum normalized and error spectrum propogated

-> Writing spectrum parameters to PANDAS DataFrame of sample parameters to be considered later...
523 A1689_1
-> Plotting original spectrum shifted to rest-frame, rest-frame luminosity spectrum, and rest-frame normalized luminosity spectrum...
-> Saving spectrum to a file to be accessed later...

A1689_1.rest_UV.523.rest-frame.lum.norm-lum.not-resampled.txt written!



restframe_lum_normlum_spectra_Lum_Density.pdf written!



Sample parameters of interest:
     ID     Mask   Filter  ... Redshift_Error Lum_Density_1700 Lum_Density_1700_Err
0  1034  A1689_1  rest_UV  ...       0.000005              0.0                  0.0
1  1467  A1689_1  rest_UV  ...        0.00002              0.0                  0.0
2  1721  A1689_1  rest_UV  ...       0.000046              0.0                  0.0
3   257  A1689_1  rest_UV  ...       0.000004              0.0                  0.0
4   470  A1689_1  rest_UV  ...       0.000018              0.0                  0.0
5   523  A1689_1  rest_UV  ...       0.000033              0.0                  0.0

[6 rows x 9 columns]


rest_UV
At the end of the stacking process, the sample median of the normalization feature (Lum_Density) will be multiplied into the stack
This value will be written to the header of the tabulated stacked spectrum multiplied by this value
--- A version of the stack without this final multiplication will also be created ---

sample_parameters_Lum_Density_median.txt written.

The median redshift of the sample is: 2.4795

From the LRIS-band observed-frame dispersion of 2.18 A/pixel that will be used for the LRIS stack, 
the rest-frame dispersion will be: 0.6265

resampled_wavelength_parameters.txt - which includes the new minimum and new maximum wavelengths
 and the rest-frame dispersions - written


problem
['A1689_1.rest_UV.1034.rest-frame.lum.norm-lum.not-resampled.txt', 'A1689_1.rest_UV.1467.rest-frame.lum.norm-lum.not-resampled.txt', 'A1689_1.rest_UV.1721.rest-frame.lum.norm-lum.not-resampled.txt', 'A1689_1.rest_UV.257.rest-frame.lum.norm-lum.not-resampled.txt', 'A1689_1.rest_UV.470.rest-frame.lum.norm-lum.not-resampled.txt', 'A1689_1.rest_UV.523.rest-frame.lum.norm-lum.not-resampled.txt']
The length is 6
--> Considering A1689_1.rest_UV.1034.rest-frame.lum.norm-lum.not-resampled.txt for resampling:

A1689_1.rest_UV.1034.rest-frame.lum.norm-lum.not-resampled.txt
<class 'str'>
Mask: A1689_1
Filter: rest_UV
ID: 1034

-> Resampling the spectrum according to the aforementioned wavelength range and dispersion for the stack...

-> Trimming the ends of the spectrum that fall outside the new wavelength range...
-> Resampling the spectrum...

Spectres: new_wavs contains values outside the range in spec_wavs, new_fluxes and new_errs will be filled with the value set in the 'fill' keyword argument. 


-> New wavelength, luminosity, and luminosity error (if resampled) arrays will be returned as a 2D array with columns in this respective order.
[[1.15000000e+03 0.00000000e+00 0.00000000e+00]
 [1.15062650e+03 7.61666729e-02 6.91811693e-02]
 [1.15125300e+03 7.82074484e-02 6.71738890e-02]
 ...
 [1.56411650e+03 5.39673890e-02 7.77433141e-02]
 [1.56474300e+03 8.73764492e-02 7.53405957e-02]
 [1.56536950e+03 0.00000000e+00 0.00000000e+00]]

A1689_1.rest_UV.1034.resampled_noDC.txt written!



The length is 6
--> Considering A1689_1.rest_UV.1467.rest-frame.lum.norm-lum.not-resampled.txt for resampling:

A1689_1.rest_UV.1467.rest-frame.lum.norm-lum.not-resampled.txt
<class 'str'>
Mask: A1689_1
Filter: rest_UV
ID: 1467

-> Resampling the spectrum according to the aforementioned wavelength range and dispersion for the stack...

-> Trimming the ends of the spectrum that fall outside the new wavelength range...
-> Resampling the spectrum...

Spectres: new_wavs contains values outside the range in spec_wavs, new_fluxes and new_errs will be filled with the value set in the 'fill' keyword argument. 


-> New wavelength, luminosity, and luminosity error (if resampled) arrays will be returned as a 2D array with columns in this respective order.
[[ 1.15000000e+03  0.00000000e+00  0.00000000e+00]
 [ 1.15062650e+03  6.11760121e-01  2.29109389e-01]
 [ 1.15125300e+03 -1.36576201e-02  2.29060535e-01]
 ...
 [ 1.56411650e+03  1.93084222e-01  1.55305677e-01]
 [ 1.56474300e+03  3.35731823e-01  1.53829046e-01]
 [ 1.56536950e+03  0.00000000e+00  0.00000000e+00]]

A1689_1.rest_UV.1467.resampled_noDC.txt written!



The length is 6
--> Considering A1689_1.rest_UV.1721.rest-frame.lum.norm-lum.not-resampled.txt for resampling:

A1689_1.rest_UV.1721.rest-frame.lum.norm-lum.not-resampled.txt
<class 'str'>
Mask: A1689_1
Filter: rest_UV
ID: 1721

-> Resampling the spectrum according to the aforementioned wavelength range and dispersion for the stack...

-> Trimming the ends of the spectrum that fall outside the new wavelength range...
-> Resampling the spectrum...

Spectres: new_wavs contains values outside the range in spec_wavs, new_fluxes and new_errs will be filled with the value set in the 'fill' keyword argument. 


-> New wavelength, luminosity, and luminosity error (if resampled) arrays will be returned as a 2D array with columns in this respective order.
[[1.15000000e+03 1.34060000e-01 8.45200000e-02]
 [1.15062650e+03 1.83063039e-01 7.35621186e-02]
 [1.15125300e+03 2.88787577e-01 6.57073697e-02]
 ...
 [1.56411650e+03 4.15537834e-02 3.66614354e-02]
 [1.56474300e+03 5.43586682e-02 4.10698674e-02]
 [1.56536950e+03 0.00000000e+00 0.00000000e+00]]

A1689_1.rest_UV.1721.resampled_noDC.txt written!



The length is 6
--> Considering A1689_1.rest_UV.257.rest-frame.lum.norm-lum.not-resampled.txt for resampling:

A1689_1.rest_UV.257.rest-frame.lum.norm-lum.not-resampled.txt
<class 'str'>
Mask: A1689_1
Filter: rest_UV
ID: 257

-> Resampling the spectrum according to the aforementioned wavelength range and dispersion for the stack...

-> Trimming the ends of the spectrum that fall outside the new wavelength range...
-> Resampling the spectrum...

Spectres: new_wavs contains values outside the range in spec_wavs, new_fluxes and new_errs will be filled with the value set in the 'fill' keyword argument. 


-> New wavelength, luminosity, and luminosity error (if resampled) arrays will be returned as a 2D array with columns in this respective order.
[[1.15000000e+03 0.00000000e+00 0.00000000e+00]
 [1.15062650e+03 0.00000000e+00 0.00000000e+00]
 [1.15125300e+03 4.56418281e-01 2.12301657e-01]
 ...
 [1.56411650e+03 1.78563012e-01 1.52570927e-02]
 [1.56474300e+03 1.87445980e-01 1.46575691e-02]
 [1.56536950e+03 0.00000000e+00 0.00000000e+00]]

A1689_1.rest_UV.257.resampled_noDC.txt written!



The length is 6
--> Considering A1689_1.rest_UV.470.rest-frame.lum.norm-lum.not-resampled.txt for resampling:

A1689_1.rest_UV.470.rest-frame.lum.norm-lum.not-resampled.txt
<class 'str'>
Mask: A1689_1
Filter: rest_UV
ID: 470

-> Resampling the spectrum according to the aforementioned wavelength range and dispersion for the stack...

-> Trimming the ends of the spectrum that fall outside the new wavelength range...
-> Resampling the spectrum...

Spectres: new_wavs contains values outside the range in spec_wavs, new_fluxes and new_errs will be filled with the value set in the 'fill' keyword argument. 


-> New wavelength, luminosity, and luminosity error (if resampled) arrays will be returned as a 2D array with columns in this respective order.
[[1.15000000e+03 0.00000000e+00 0.00000000e+00]
 [1.15062650e+03 1.19763833e-01 5.08131120e-02]
 [1.15125300e+03 1.46847215e-01 5.05670179e-02]
 ...
 [1.56411650e+03 1.41900000e-01 7.55500000e-02]
 [1.56474300e+03 3.43903390e-01 8.01127328e-02]
 [1.56536950e+03 0.00000000e+00 0.00000000e+00]]

A1689_1.rest_UV.470.resampled_noDC.txt written!



The length is 6
--> Considering A1689_1.rest_UV.523.rest-frame.lum.norm-lum.not-resampled.txt for resampling:

A1689_1.rest_UV.523.rest-frame.lum.norm-lum.not-resampled.txt
<class 'str'>
Mask: A1689_1
Filter: rest_UV
ID: 523

-> Resampling the spectrum according to the aforementioned wavelength range and dispersion for the stack...

-> Trimming the ends of the spectrum that fall outside the new wavelength range...
-> Resampling the spectrum...

Spectres: new_wavs contains values outside the range in spec_wavs, new_fluxes and new_errs will be filled with the value set in the 'fill' keyword argument. 


-> New wavelength, luminosity, and luminosity error (if resampled) arrays will be returned as a 2D array with columns in this respective order.
[[1.15000000e+03 0.00000000e+00 0.00000000e+00]
 [1.15062650e+03 2.76050030e-02 1.66006988e-02]
 [1.15125300e+03 5.02752386e-02 1.62912806e-02]
 ...
 [1.56411650e+03 2.06664484e-02 1.33965715e-02]
 [1.56474300e+03 1.48409876e-02 1.35566481e-02]
 [1.56536950e+03 0.00000000e+00 0.00000000e+00]]

A1689_1.rest_UV.523.resampled_noDC.txt written!



resampled_normalized_spectra.pdf written!



--> Stacking the spectra and finalizing the stacks...

-> Combining all of the resampled spectra into one stack via a(n) median ...

-> Multiplying the stacked spectrum by the sample's median continuum luminosity density at 1700 Angstroms...
This sample value is: 2.146349480968858e-18



stacked_spectrum_LRIS-bands_median_Lum_Density_noDC.txt written!
stacked_spectrum_LRIS-bands_median_Lum_Density_noDC_final_step-stacked.txt written!



stacking_spectra_Lum_Density_median_08-27-2022.log - which logs the terminal output - has been written
and stored in: /Users/chrismac/python/stack_spectra/logfiles/

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



